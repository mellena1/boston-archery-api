service: boston-archery-api

custom:
  development:
    awsBuildPrefix: 
    cmd: 'GOOS=linux go build -ldflags="-s -w"'
  prod:
    awsBuildPrefix: 'GOOS=linux GOARCH=arm64 CGO_ENABLED=0 '
    cmd: 'GOOS=linux GOARCH=arm64 go build -ldflags="-s -w"'
  archeryTagTableName: ArcheryTag
  serverless-offline:
    useDocker: true
    dockerHostServicePath: bin
    reloadHandler: false
  serverless-dynamodb:
    stages:
      - dev
    start:
      docker: true
      port: 4569
      inMemory: true
      migrate: true
      convertEmptyValues: true
  go-build:
    awsbuildPrefix: 'GOOS=linux CGO_ENABLED=0 '
    useBinPathForHandler: true
    runtime: provided.al2
  go:
    cgo: 0
    supportedRuntimes: ["provided.al2"]
    baseDir: .
    binDir: bin
    buildProvidedRuntimeAsBootstrap: true
    cmd: GOOS=linux GOARCH=arm64 go build -ldflags="-s -w"

provider:
  name: aws
  stage: development
  runtime: provided.al2
  architecture: arm64
  region: us-east-1
  memorySize: 128
  logRetentionInDays: 14
  versionFunctions: false
  environment:
    ARCHERY_TABLE_NAME: ${self:custom.archeryTagTableName}
  deploymentBucket:
    maxPreviousDeploymentArtifacts: 1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - "arn:aws:dynamodb:us-east-1:*:table/${self:custom.archeryTagTableName}"
            - "arn:aws:dynamodb:us-east-1:*:table/${self:custom.archeryTagTableName}/index/*"

package:
  individually: true

functions:
  auth:
    handler: handlers/auth/*.go
    reservedConcurrency: 5
    events:
      - http:
          path: /auth/{proxy+}
          method: any
  seasons:
    handler: handlers/seasons/*.go
    reservedConcurrency: 5
    events:
      - http:
          path: /api/v1/seasons
          method: any


resources:
  Resources:
    ArcheryTag:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.archeryTagTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: EntityType
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: EntityTypeGSI
            KeySchema:
              - AttributeName: EntityType
                KeyType: HASH
              - AttributeName: PK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

plugins:
  - serverless-go-plugin
  # - serverless-go-build-extended
  - serverless-dynamodb
  - serverless-dotenv-plugin
  - serverless-offline  # must be loaded after
